package Combatant;
import java.util.Scanner;


public class Combatant {
	private String name;
	private int attack;
	private int defense;
	private int speed;
	private int statpoints;
	private int stamina;
	private int health = (stamina + 1) * 10;
	private Equipment gear;
	
	public Combatant() {
		this.name = "";
		this.attack = 0;
		this.defense = 0;
		this.speed = 0;
		this.statpoints = 15;
		this.stamina = 0;
		this.gear = null;
	}
	
	public Combatant(String name, int attack, int defense, int speed, int statpoints, int stamina, Equipment gear) {
		this.name = name;
		this.attack = attack;
		this.defense = defense;
		this.speed = speed;
		this.statpoints = statpoints;
		this.stamina = stamina;
		this.gear = gear;
	}
	
	/** Character creation method **/
	public void createChar() {
		Scanner scan = new Scanner(System.in);
		this.giveName(scan);
		this.giveAttack(scan);
		this.giveDefense(scan);
		this.giveSpeed(scan);
		this.giveStamina(scan);
		scan.close();
	}

	
	/** Character naming method **/
	public void giveName(Scanner scan) {
		System.out.printf("Name: ");
		String name = scan.nextLine();
		this.setName(name);
		System.out.println("");
		}
	
	/** Attack allocation method **/
	public void giveAttack(Scanner scan) {
		while(this.statpoints > 0) {
			
			System.out.printf("Statpoints Remaining: " + this.getStatpoints() + "\n");
			System.out.printf("Current Attack: " + this.getAttack() + "\n");
			System.out.printf("Add Attack: ");
			int att = scan.nextInt();
			if(att > this.getStatpoints()) {
				System.out.println("Not enough statpoints! Try again.");
				this.giveAttack(new Scanner(System.in));
			}
			this.setAttack(this.getAttack() + att);
			this.setStatpoints(this.getStatpoints() - att);
			System.out.println("");
			}
	}
	
	/** Defense allocation method **/
	public void giveDefense(Scanner scan) {
		while(this.statpoints > 0) {
			
			System.out.printf("Statpoints Remaining: " + this.getStatpoints() + "\n");
			System.out.printf("Current Defense: " + this.getDefense() + "\n");
			System.out.printf("Add Defense: ");
			int def = scan.nextInt();
			if(def > this.getStatpoints()) {
				System.out.println("Not enough statpoints! Try again.");
				this.giveDefense(new Scanner(System.in));
			}
			this.setDefense(this.getDefense() + def);
			this.setStatpoints(this.getStatpoints() - def);
			System.out.println("");
		}
	}
	
	/** speed allocation method **/
	public void giveSpeed(Scanner scan) {
		while(this.statpoints > 0) {
			
			System.out.printf("Statpoints Remaining: " + this.getStatpoints() + "\n");
			System.out.printf("Current Speed: " + this.getSpeed() + "\n");
			System.out.printf("Add Speed: ");
			int spd = scan.nextInt();
			if(spd > this.getStatpoints()) {
				System.out.println("Not enough statpoints! Try again.");
				this.giveSpeed(new Scanner(System.in));
			}
			this.setSpeed(this.getSpeed() + spd);
			this.setStatpoints(this.getStatpoints() - spd);
			System.out.println("");
		}
	}
	
	/** stamina allocation method **/
	public void giveStamina(Scanner scan) {
		while(this.statpoints > 0) {
			
			System.out.printf("Statpoints Remaining: " + this.getStatpoints() + "\n");
			System.out.printf("Current Stamina: " + this.getStamina() + "\n");
			System.out.printf("Add Stamina: ");
			int stam = scan.nextInt();
			if(stam > this.getStatpoints()) {
				System.out.println("Not enough statpoints! Try again.");
				this.giveStamina(new Scanner(System.in));
			}
			this.setStamina(this.getStamina() + stam);
			this.setStatpoints(this.getStatpoints() - stam);
			System.out.println("");
		}
	}
	
	/** Gets the combatant's attack **/
	public int getAttack() {
		return this.attack;
	}
	
	/** Gets the combatant's defense **/
	public int getDefense() {
		return this.defense;
	}
	
	/** Gets the combatant's speed **/
	public int getSpeed() {
		return this.speed;
	}
	
	/** Gets the combatant's stamina **/
	public int getStamina() {
		return this.stamina;
	}
	
	/** Gets the combatant's health **/
	public int getHealth() {
		return this.health;
	}
	
	/** Gets the combatant's statpoints **/
	public int getStatpoints() {
		return this.statpoints;
	}
	
	/** Gets the combatant's name **/
	public String getName() {
		return this.name;
	}
	
	/** Gets the combatant's gear **/
	public Equipment getEquipment() {
		return this.gear;
	}
	
	
	/** Sets the combatant's name **/
	public void setName(String name) {
		this.name = name;
	}
	
	/** Sets the combatant's attack **/
	public void setAttack(int att) {
		this.attack = att;
	}
	
	/** Sets the combatant's defense **/
	public void setDefense(int def) {
		this.defense = def;
	}
	
	/** Sets the combatant's speed **/
	public void setSpeed(int spd) {
		this.speed = spd;
	}
	
	/** Sets the combatant's stamina **/
	public void setStamina(int stam) {
		this.stamina = stam;
	}
	
	/** Sets the combatant's health **/
	public void setHealth(int hp) {
		this.health = hp;
	}
	
	/** Sets the combatant's statpoints **/
	public void setStatpoints(int stat) {
		this.statpoints = stat;
	}
	
	/** Sets the combatant's gear **/
	public void setGear(Equipment gear) {
		this.gear = gear;
	}
	
	
	/** Obtains the stats added by the combatant's equipment and applies them**/
	public void getBonuses() {
		int bonusatt = this.gear.getBonusAtt();
		int bonusdef = this.gear.getBonusDef();
		int bonusspd = this.gear.getBonusSpd();
		int bonusstam = this.gear.getBonusStam();
		
		this.attack = this.getAttack() + bonusatt;
		this.defense = this.getDefense() + bonusdef;
		this.speed = this.getSpeed() + bonusspd;
		this.stamina = this.getStamina() + bonusstam;
	}
	
	/** Main method **/
	public static void main(String args[]) {
		Combatant newchar = new Combatant();
		newchar.createChar();
		System.out.println("Character Created!");
		System.out.println("Name: " + newchar.getName());
		System.out.println("Attack: " + newchar.getAttack());
		System.out.println("Defense:  " + newchar.getDefense());
		System.out.println("Speed: " + newchar.getSpeed());
		System.out.println("Stamina: " + newchar.getStamina());
		System.out.println("Health: " + newchar.getHealth());
		System.out.println("Statpoints: " + newchar.getStatpoints());
	}
}

